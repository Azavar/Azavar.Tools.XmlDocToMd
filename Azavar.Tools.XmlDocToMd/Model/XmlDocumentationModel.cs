using System;
using System.Collections.Generic;
using System.Xml;

namespace Azavar.Tools.XmlDocToMd.Model
{
    /// <summary>
    /// Represents a parsed model of the contents of an XML documentation file generated by Visual Studio as desribed here: https://msdn.microsoft.com/en-us/library/b2s063f7.aspx.
    /// This class doesn't fully make use of all capabilities of XML documentation.
    /// </summary>
    public class XmlDocumentationModel
    {
        /// <summary>
        /// Gets the assembly name for which the XML docuemntation file was parsed.
        /// </summary>
        public string AssemblyName { get; }
        /// <summary>
        /// Gets a dictionary of all <see cref="Member"/> instances within the model where the key is the member ID and he value is the object reference.
        /// </summary>
        public Dictionary<string, Member> Members { get; } = new Dictionary<string, Member>();

        /// <summary>
        /// Loads and parses an XML documentation file by it's local path.
        /// </summary>
        /// <param name="inputFilePath"></param>
        /// <exception cref="InvalidOperationException"></exception>
        public XmlDocumentationModel(string inputFilePath)
        {
            var doc = new XmlDocument();
            doc.Load(inputFilePath);
            if (doc.DocumentElement == null)
                throw new InvalidOperationException();
            AssemblyName = doc.DocumentElement.SelectSingleNode("/doc/assembly/name")?.InnerText;
            var types = doc.DocumentElement.SelectNodes("/doc/members/member[starts-with(@name, 'T:')]");
            if (types == null)
                throw new InvalidOperationException();
            foreach (XmlNode member in types)
            {
                var t = new Type(this, member);
                Members.Add(t.Id, t);
            }
            var methods = doc.DocumentElement.SelectNodes("/doc/members/member[starts-with(@name, 'M:')]");
            if (methods == null)
                throw new InvalidOperationException();
            foreach (XmlNode member in methods)
            {
                var t = new Method(this, member);
                Members.Add(t.Id, t);
            }
            var properties = doc.DocumentElement.SelectNodes("/doc/members/member[starts-with(@name, 'P:')]");
            if (properties == null)
                throw new InvalidOperationException();
            foreach (XmlNode member in properties)
            {
                var t = new Property(this, member);
                Members.Add(t.Id, t);
            }
        }
    }
}